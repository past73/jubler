1. lekcija
==========

Uvod u Python
-------------

Programski jezik Python nastao je početkom devedesetih godina prošlog veka. Njegov autor je Gvido van Rosum. Svako može da koristi programski jezik Python besplatno bilo u komercijalne ili u druge svrhe.

Jedna naredba po liniji programskog koda, sa ENTER se definiše kraj programskog reda.

**#** posle ovog znaka (#) se mogu pisati komentari koje program ne izvršava, a vama kao programerima može služiti kao pomoć u vidu objašnjenja programskog koda za koji se odnosi komentar.

Promenljive
-----------

Promenljive se uvode kao čaše koje u sebi mogu da prime različite vrednosti (brojeve, slova, tekst,…) koje će se kas-nije koristiti u programu.
 
Ime promenljive može biti slovo, broj ili donja crta (za spajanje više reči u jedno ime), **NA POČETKU SE NE MOŽE NAĆI BROJ.** Ime promenljive je osetljivo na velika i mala slova, **SADRŽI SAMO SLOVA ENGLESKOG ALFABETA i NE SADRŽI PRAZNA MESTA.**

Dozvoljena imena su, na primer: **x, obim, drugi_sabirak, broj_sekundi, a2,** a nedozvoljena su, na primer, **3d_grafika** (jer počinje cifrom), **prvi sabirak** (jer sadrži razmak) i **jezik_c#** (jer sadrži nedozvoljeni znak #).

Primer naziva promenljivih: **_ZBIR1, ZBIR2** ili **zbir2**. Promenljive: **zbir** ili **Zbir** – su dve različite promenljive.

Inicijalizacija promenljive – **zadavanje određene vrednosti nekoj promenljivoj:** a=157 ili zbir1=167.

Najvažniji tipovi promenljivih su:

 * **int** – celi brojevi (-2, -59, 0, 569, 847,…),
 * **float** – realni brojevi (-2.524, -59.1, 569.246, 847.12,…),
 * **str** – slova ('a', 'abc', 'Petar',…)
 
Postoje još tipovi promenljivih, ali ovi su najvažniji.

Aritmetičke - matematičke operacije
-----------------------------------

Prilikom izrade programa koristimo standardne matematičke operacije i zagrade. Sva pravila koja važe u matematici prilikom proračuna važe i ovde.

.. admonition::  Simboli za matematičke operacije su:

   * Sabiranje **+**
   * Oduzimanje **–**
   * Deljenje **/**
   * Množenje *****

Primetimo da smo oko operatora kucali razmake (na primer, 3 + 5, 8 - 2 ili 4 * 6). Ti razmaci nisu neophodni i isprav-no je napisati i 3+5 ili 4*6. Programeri vole da kucaju razmak oko svakog operatora (znaka operacije) da bi dobili tekst programa koji lepše izgleda i koji se lakše može pročitati.

Međutim, za vežbu nije potrebno instalirati Python na računaru, već programski kod unositi u online Python interpre-tator (program koji izvršava Python naredbe). Online Python interpretator možete naći na sledećoj adresi: `REPL.it <https://repl.it>`_, pratite redom korake kao na slikama ispod.

.. image:: slike/1.1.png
   :alt: Slika 1
   :height: 397
   :width: 1000
   
.. image:: slike/1.2.png
   :alt: Slika 2
   :height: 300
   :width: 1000

Ispis rezultata programa – Print
--------------------------------

Kada se izvrši proračun na osnovu komandi programa rezultat treba da se odštampa, odnosno prikaže na ekranu za korisnika koji je pokrenuo program. Ispisuje se vrednost nekog izraza koji je rezultat obrade ulaznih veličina progra-ma, računaru moramo nekako reći da on tu vrednost odštampa. Štampaj se na engleskom jeziku kaže print, pomoću koje se ispisuju vrednosti unutar te komande. Primeri:

**print (\"Pozdrav\")** - program će ispisati reč Pozdrav. 
 
**print (zbir)** - program će ispisati vrednost promenljive zbir koja je zadana u tom trenutku. 
 
**print (\"Rezultat sabiranje je\", zbir)** - u ovom slučaju pod znacima navoda se ispisuje fiksan tekst Rezultat sabiranja je i odmah do njega ispisuje vrednost promenljive zbir. U slučaju da je vrednost promenljive zbir recimo 15, tada će ispisati na ekranu: *Rezultat sabiranja je 15.* 

| U komandi *print* unutar zagrade pod navodnicima uvek ide fiksan tekst, zarez dodaje druge vrednosti kod ispisa, da li vrednosti neke promenljive (pišemo naziv promenljive bez navodnika) ili drugi fiksan tekst (pišemo ga u znacima na-voda). 
| Na primer: **print (\"Rezultat sabiranje je\",zbir,\"ovim smo završili program\")**, ispisuje: *Rezultat sabiranja je 15 ovim smo završili program.*

U jeziku Python od verzije 3 može se slobodno koristiti znakovi različitih pisama. U sklopu print komande može se navesti nekoliko stvari unutar, razdvojenih zarezima. U tim situacijama print ispisuje svaku od njih, razdvajajući ih razmacima (na primer, kada se izvrši nareba: 

**print (\"baci\", 5)** - ispisuje se baci 5. 

Stvari navedene unutar print razdvajaju se sa po jednim razmakom. To se može promeniti tako što se na kraju print navede sep="" i unutar navodnika navede šta će se koristiti da razdvoji delove. Na primer, ako se navede:
 
**print(1, 2, 3, sep=\"\")** - ispisaće se 123, a ako se navede;

**print(1, 2, 3, sep=\", \")** - ispisaće se 1, 2, 3. 

Nakon svakog izvršavanja print prelazi se u novi red (naredni pozivi print ispisaće svoj rezultat u narednom redu). I to se može promeniti tako što se na kraju print navede end="" i unutar navodnika ono što će se koristiti nakon celog ispisa. Na primer: 

**print(1, 2, end=\"\")** - prouzrokuje da se nakon ispisa ne pređe u novi red, već da naredni ispis ide neposredno nakon vrednosti 2.

Zadatak 1.
----------
Napisati program da se prilikom njegovog pokretanja od korisnika traže ulazni podaci u vidu dva cela broja. Kao re-zultat program izračunava zbir, razliku, proizvod i količnik ta dva broja.

Rešenje:
////////

| PrviBroj=int(input("Unesite vrednost prvog broja: "))
| DrugiBroj=int(input("Unesite vrednost drugog broja: "))
| zbir=PrviBroj+DrugiBroj
| razlika=PrviBroj-DrugiBroj
| proizvod=PrviBroj*DrugiBroj
| kolicnik=PrviBroj/DrugiBroj
| print("Zbir dva broja je:",zbir,"Razlika dva broja je:",razlika)
| print("Proizvod dva broja je:",proizvod,"Količnik dva broja je:",kolicnik)

Zadatak 2. - Smederevska tvrđava
--------------------------------

| Smederevska tvrđava ima oblik trougla stranica 550m, 502m i 400m. Koliki je obim tvrđave (kada šetaš oko tvrđave, koliko ćeš metara preći)?  Napiši program koji izračunava obim bilo koje tvrđave koja ima oblik trougla.
| **Ulaz**
| Na standardnom ulazu unose se vrednosti stranica tvrđave.
| **Izlaz**
| Obim tvrđave, odnosno koliko metara se prelazi prilikom šetnje oko tvrđave.
| **Ulaz:** 550   502   400
| **Izlaz:** 	1452

.. image:: slike/1.3.jpg
   :alt: Slika 3
   :height: 211
   :width: 300

Rešenje:
////////

| a=int(input(\"Unesite vrednost prve stranice tvrđave: \"))
| b=int(input(\"Unesite vrednost druge stranice tvrđave: \"))
| c=int(input(\"Unesite vrednost treće stranice tvrđave: \"))
| obim=a+b+c
| print(\"Prilikom šetnje oko tvrđave preći ćemo:\",obim,\"metara.\")

Domaći zadatak 3. - Fudbalski teren 2
-------------------------------------

| Ana trči po pravougaonoj stazi, fudbalskom terenu. Izračunati za unete dužinu i širinu terena koliko ona pretrči, ako se zna da je optrčala teren četiri puta.
| **Ulaz**
| Na standardnom ulazu unosi se vrednost dužine i širine terena.
| **Izlaz**
| Koliko je Ana pretrčala stazu oko terena četiri puta.
| **Ulaz:**   115   80   100   65
| **Izlaz:**   1560   1320

Rešenje:
////////
| duzina=int(input(\"Unesite dužinu terena: \"))
| sirina=int(input(\"Unesite širinu terena: \"))
| staza = 2 * duzina + 2 * sirina
| pretrcala=4*staza
| print(\"Dužina staze koju je Ana pretrčala četiri puta je:\",pretrcala,\"metara.\")

Proba video materijala

.. raw:: html

   <iframe width="560" height="315" src="https://www.youtube.com/embed/DSIuLnoKLd8?si=jAlIBDZ7S5I247Sm" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>


